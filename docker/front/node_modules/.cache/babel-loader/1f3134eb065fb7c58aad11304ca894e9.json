{"ast":null,"code":"var _jsxFileName = \"/home/mutovkin/docker_homework/frontend/src/KeyWordCreateUpdate.js\";\nimport React, { Component } from 'react';\nimport KeyWordManager from './KeyWordAPI';\nconst keyWordManager = new KeyWordManager();\n\nclass KeyWordCreateUpdate extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: null,\n      name: ''\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  componentDidMount() {\n    const {\n      match: {\n        params\n      }\n    } = this.props;\n\n    if (params && params.pk) {\n      keyWordManager.getKeyWord(params.pk).then(a => {\n        this.setState({\n          name: a.name\n        });\n      });\n    }\n  }\n\n  handleUpdate(pk) {\n    keyWordManager.updateKeyWord({\n      \"pk\": pk,\n      \"name\": this.state.name\n    }).then(result => {\n      alert(\"Ключевое слово отредактировано!\");\n    }).catch(() => {\n      alert(\"Ошибка! Проверь форму!\");\n    });\n  }\n\n  handleCreate() {\n    keyWordManager.createKeyWord({\n      \"name\": this.state.name\n    }).then(result => {\n      alert(\"Ключевое слово создано!\");\n    }).catch(() => {\n      alert(\"Ошибка! Проверь форму!\");\n    });\n  }\n\n  handleSubmit(e) {\n    const {\n      match: {\n        params\n      }\n    } = this.props;\n\n    if (params && params.pk) {\n      this.handleUpdate(params.pk);\n    } else {\n      this.handleCreate(params);\n    }\n\n    e.preventDefault();\n  }\n\n  handleChange(e) {\n    this.setState({\n      [e.target.id]: e.target.value\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }\n    }, \"\\u041A\\u043B\\u044E\\u0447\\u0435\\u0432\\u043E\\u0435 \\u0441\\u043B\\u043E\\u0432\\u043E\"), /*#__PURE__*/React.createElement(\"input\", {\n      onChange: this.handleChange,\n      id: \"name\",\n      className: \"form-control\",\n      type: \"text\",\n      value: this.state.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"btn btn-primary\",\n      type: \"submit\",\n      value: \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }\n    }))));\n  }\n\n}\n\nexport default KeyWordCreateUpdate;","map":{"version":3,"sources":["/home/mutovkin/docker_homework/frontend/src/KeyWordCreateUpdate.js"],"names":["React","Component","KeyWordManager","keyWordManager","KeyWordCreateUpdate","constructor","props","state","id","name","handleSubmit","bind","handleChange","componentDidMount","match","params","pk","getKeyWord","then","a","setState","handleUpdate","updateKeyWord","result","alert","catch","handleCreate","createKeyWord","e","preventDefault","target","value","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport KeyWordManager from './KeyWordAPI';\n\nconst keyWordManager = new KeyWordManager();\n\nclass KeyWordCreateUpdate extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n        id:null,\n        name:'',\n      }\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  componentDidMount(){\n    const {match: {params}} = this.props;\n    if(params && params.pk) {\n      keyWordManager.getKeyWord(params.pk).then((a)=>{\n        this.setState({\n          name: a.name\n        })\n      })\n    }\n  }\n\n  handleUpdate(pk){\n    keyWordManager.updateKeyWord({\n      \"pk\": pk,\n      \"name\": this.state.name,\n    }).then((result)=>{\n        alert(\"Ключевое слово отредактировано!\");\n      }).catch(()=>{\n        alert(\"Ошибка! Проверь форму!\");\n      });\n  }\n\n  handleCreate(){\n    keyWordManager.createKeyWord({\n      \"name\": this.state.name,\n    }).then((result)=>{\n        alert(\"Ключевое слово создано!\");\n      }).catch(()=>{\n        alert(\"Ошибка! Проверь форму!\");\n      });\n  }\n\n  handleSubmit(e){\n    const { match: { params } } = this.props;\n    if (params && params.pk){\n      this.handleUpdate(params.pk);\n    }\n    else {\n      this.handleCreate(params);\n    }\n    e.preventDefault();\n  }\n\n  handleChange(e){\n    this.setState({\n        [e.target.id]:e.target.value\n      })\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n      <form onSubmit={this.handleSubmit}>\n        <div className=\"form-group\">\n          <label>Ключевое слово</label>\n          <input onChange={this.handleChange} id=\"name\" className=\"form-control\" type=\"text\" value={this.state.name}/>\n\n          <input className=\"btn btn-primary\" type=\"submit\" value=\"Сохранить\"/>\n\n        </div>\n      </form>\n      </div>\n    );\n  }\n\n}\nexport default KeyWordCreateUpdate;\n"]},"metadata":{},"sourceType":"module"}