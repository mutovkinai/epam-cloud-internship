{"ast":null,"code":"var _jsxFileName = \"/home/mutovkin/docker_homework/frontend/src/BBKCreateUpdate.js\";\nimport React, { Component } from 'react';\nimport BBKManager from './BBKApi';\nconst bbkManager = new BBKManager();\n\nclass BBKCreateUpdate extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: null,\n      code: '',\n      description: ''\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  componentDidMount() {\n    const {\n      match: {\n        params\n      }\n    } = this.props;\n\n    if (params && params.pk) {\n      bbkManager.getBBK(params.pk).then(a => {\n        this.setState({\n          code: a.code,\n          description: a.description\n        });\n      });\n    }\n  }\n\n  handleUpdate(pk) {\n    bbkManager.updateBBK({\n      \"pk\": pk,\n      \"code\": this.state.code,\n      \"description\": this.state.description\n    }).then(result => {\n      alert(\"Код отредактирован!\");\n    }).catch(() => {\n      alert(\"Ошибка! Проверь форму!\");\n    });\n  }\n\n  handleCreate() {\n    bbkManager.createBBK({\n      \"code\": this.state.code,\n      \"description\": this.state.description\n    }).then(result => {\n      alert(\"Код создан!\");\n    }).catch(() => {\n      alert(\"Ошибка! Проверь форму!\");\n    });\n  }\n\n  handleSubmit(e) {\n    const {\n      match: {\n        params\n      }\n    } = this.props;\n\n    if (params && params.pk) {\n      this.handleUpdate(params.pk);\n    } else {\n      this.handleCreate(params);\n    }\n\n    e.preventDefault();\n  }\n\n  handleChange(e) {\n    this.setState({\n      [e.target.id]: e.target.value\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }\n    }, \"\\u041A\\u043E\\u0434\"), /*#__PURE__*/React.createElement(\"input\", {\n      onChange: this.handleChange,\n      id: \"code\",\n      className: \"form-control\",\n      type: \"text\",\n      value: this.state.code,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }\n    }, \"\\u041E\\u043F\\u0438\\u0441\\u0430\\u043D\\u0438\\u0435\"), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"form-control\",\n      id: \"description\",\n      type: \"text\",\n      value: this.state.description,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"btn btn-primary\",\n      type: \"submit\",\n      value: \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }\n    }))));\n  }\n\n}\n\nexport default BBKCreateUpdate;","map":{"version":3,"sources":["/home/mutovkin/docker_homework/frontend/src/BBKCreateUpdate.js"],"names":["React","Component","BBKManager","bbkManager","BBKCreateUpdate","constructor","props","state","id","code","description","handleSubmit","bind","handleChange","componentDidMount","match","params","pk","getBBK","then","a","setState","handleUpdate","updateBBK","result","alert","catch","handleCreate","createBBK","e","preventDefault","target","value","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport BBKManager from './BBKApi';\n\nconst bbkManager = new BBKManager();\n\nclass BBKCreateUpdate extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n        id:null,\n        code:'',\n        description:'',\n      }\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  componentDidMount(){\n    const {match: {params}} = this.props;\n    if(params && params.pk) {\n      bbkManager.getBBK(params.pk).then((a)=>{\n        this.setState({\n          code:a.code,\n          description:a.description\n        })\n      })\n    }\n  }\n\n  handleUpdate(pk){\n    bbkManager.updateBBK({\n      \"pk\": pk,\n      \"code\": this.state.code,\n      \"description\": this.state.description,\n    }).then((result)=>{\n        alert(\"Код отредактирован!\");\n      }).catch(()=>{\n        alert(\"Ошибка! Проверь форму!\");\n      });\n  }\n\n  handleCreate(){\n    bbkManager.createBBK({\n      \"code\": this.state.code,\n      \"description\": this.state.description,\n    }).then((result)=>{\n        alert(\"Код создан!\");\n      }).catch(()=>{\n        alert(\"Ошибка! Проверь форму!\");\n      });\n  }\n\n  handleSubmit(e){\n    const { match: { params } } = this.props;\n    if (params && params.pk){\n      this.handleUpdate(params.pk);\n    }\n    else {\n      this.handleCreate(params);\n    }\n    e.preventDefault();\n  }\n\n  handleChange(e){\n    this.setState({\n        [e.target.id]:e.target.value\n      })\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n      <form onSubmit={this.handleSubmit}>\n        <div className=\"form-group\">\n          <label>Код</label>\n          <input onChange={this.handleChange} id=\"code\" className=\"form-control\" type=\"text\" value={this.state.code}/>\n\n          <label>Описание</label>\n          <input className=\"form-control\" id=\"description\" type=\"text\" value={this.state.description} onChange={this.handleChange}/>\n\n          <input className=\"btn btn-primary\" type=\"submit\" value=\"Сохранить\"/>\n\n        </div>\n      </form>\n      </div>\n    );\n  }\n\n}\nexport default BBKCreateUpdate;\n"]},"metadata":{},"sourceType":"module"}