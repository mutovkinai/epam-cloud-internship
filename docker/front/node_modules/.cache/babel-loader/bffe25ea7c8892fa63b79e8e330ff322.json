{"ast":null,"code":"var _jsxFileName = \"/home/mutovkin/docker_homework/frontend/src/CityCreateUpdate.js\";\nimport React, { Component } from 'react';\nimport CityManager from './CityApi';\nconst cityManager = new CityManager();\n\nclass CityCreateUpdate extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: null,\n      name: ''\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  componentDidMount() {\n    const {\n      match: {\n        params\n      }\n    } = this.props;\n\n    if (params && params.pk) {\n      cityManager.getCity(params.pk).then(c => {\n        this.setState({\n          name: c.name\n        });\n      });\n    }\n  }\n\n  handleChange(e) {\n    console.log(this.state);\n    this.setState({\n      name: e.target.value\n    });\n  }\n\n  handleSubmit(e) {\n    const {\n      match: {\n        params\n      }\n    } = this.props;\n\n    if (params && params.pk) {\n      this.handleUpdate(params.pk);\n    } else {\n      this.handleCreate(params);\n    }\n\n    e.preventDefault();\n  }\n\n  handleCreate() {\n    cityManager.createCity({\n      \"name\": this.state.name\n    }).then(result => {\n      alert(\"Город создан!\");\n    }).catch(() => {\n      alert(\"Ошибка! Проверь форму!\");\n    });\n  }\n\n  handleUpdate(pk) {\n    cityManager.updateCity({\n      \"pk\": pk,\n      \"name\": this.state.name\n    }).then(result => {\n      alert(\"Город отредактирован!\");\n    }).catch(() => {\n      alert(\"Ошибка! Проверь форму!\");\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }\n    }, \"\\u0413\\u043E\\u0440\\u043E\\u0434\"), /*#__PURE__*/React.createElement(\"input\", {\n      onChange: this.handleChange,\n      id: \"name\",\n      className: \"form-control\",\n      type: \"text\",\n      value: this.state.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"btn btn-primary\",\n      type: \"submit\",\n      value: \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }\n    }))));\n  }\n\n}\n\nexport default CityCreateUpdate;","map":{"version":3,"sources":["/home/mutovkin/docker_homework/frontend/src/CityCreateUpdate.js"],"names":["React","Component","CityManager","cityManager","CityCreateUpdate","constructor","props","state","id","name","handleSubmit","bind","handleChange","componentDidMount","match","params","pk","getCity","then","c","setState","e","console","log","target","value","handleUpdate","handleCreate","preventDefault","createCity","result","alert","catch","updateCity","render"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport CityManager from './CityApi';\n\nconst cityManager = new CityManager();\n\nclass CityCreateUpdate extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      id:null,\n      name:'',\n    }\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  componentDidMount(){\n    const {match: {params}} = this.props;\n    if(params && params.pk) {\n      cityManager.getCity(params.pk).then((c) => {\n        this.setState({\n          name:c.name,\n        })\n      })\n    }\n  }\n\n  handleChange(e){\n    console.log(this.state);\n    this.setState({\n        name:e.target.value,\n      })\n  }\n\n  handleSubmit(e){\n    const { match: { params } } = this.props;\n    if (params && params.pk){\n      this.handleUpdate(params.pk);\n    }\n    else {\n      this.handleCreate(params);\n    }\n    e.preventDefault();\n  }\n\n  handleCreate(){\n    cityManager.createCity({\n      \"name\": this.state.name,\n    }).then((result)=>{\n        alert(\"Город создан!\");\n      }).catch(()=>{\n        alert(\"Ошибка! Проверь форму!\");\n      });\n  }\n\n  handleUpdate(pk){\n    cityManager.updateCity({\n      \"pk\": pk,\n      \"name\": this.state.name,\n    }).then((result)=>{\n        alert(\"Город отредактирован!\");\n      }).catch(()=>{\n        alert(\"Ошибка! Проверь форму!\");\n      });\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n      <form onSubmit={this.handleSubmit}>\n        <div className=\"form-group\">\n          <label>Город</label>\n          <input onChange={this.handleChange} id=\"name\" className=\"form-control\" type=\"text\" value={this.state.name}/>\n          <input className=\"btn btn-primary\" type=\"submit\" value=\"Сохранить\"/>\n        </div>\n      </form>\n      </div>\n    );\n  }\n}\nexport default CityCreateUpdate;\n"]},"metadata":{},"sourceType":"module"}