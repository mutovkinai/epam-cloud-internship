{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'http://localhost:8000/api/v1/lib/author/';\nexport default class AuthorManager {\n  getAuthors() {\n    return axios.get(API_URL).then(response => response.data);\n  }\n\n  getAuthor(author) {\n    const url = API_URL + author + '/';\n    return axios.get(url).then(response => response.data);\n  }\n\n  createAuthor(author) {\n    return axios.post(API_URL, author);\n  }\n\n  updateAuthor(author) {\n    const url = API_URL + author.pk + '/';\n    return axios.patch(url, author);\n  }\n\n  deleteAuthor(author) {\n    const url = API_URL + author.id + '/';\n    return axios.delete(url);\n  }\n\n}","map":{"version":3,"sources":["/home/mutovkin/docker_homework/frontend/src/AuthorApi.js"],"names":["axios","API_URL","AuthorManager","getAuthors","get","then","response","data","getAuthor","author","url","createAuthor","post","updateAuthor","pk","patch","deleteAuthor","id","delete"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,MAAMC,OAAO,GAAG,0CAAhB;AAEA,eAAe,MAAMC,aAAN,CAAoB;AAEjCC,EAAAA,UAAU,GAAE;AACV,WAAOH,KAAK,CAACI,GAAN,CAAUH,OAAV,EAAmBI,IAAnB,CAAwBC,QAAQ,IAAIA,QAAQ,CAACC,IAA7C,CAAP;AACD;;AACDC,EAAAA,SAAS,CAACC,MAAD,EAAQ;AACf,UAAMC,GAAG,GAAGT,OAAO,GAAGQ,MAAV,GAAmB,GAA/B;AACA,WAAOT,KAAK,CAACI,GAAN,CAAUM,GAAV,EAAeL,IAAf,CAAoBC,QAAQ,IAAIA,QAAQ,CAACC,IAAzC,CAAP;AACD;;AACDI,EAAAA,YAAY,CAACF,MAAD,EAAQ;AAClB,WAAOT,KAAK,CAACY,IAAN,CAAWX,OAAX,EAAmBQ,MAAnB,CAAP;AACD;;AACDI,EAAAA,YAAY,CAACJ,MAAD,EAAQ;AAClB,UAAMC,GAAG,GAAGT,OAAO,GAAGQ,MAAM,CAACK,EAAjB,GAAqB,GAAjC;AACA,WAAOd,KAAK,CAACe,KAAN,CAAYL,GAAZ,EAAgBD,MAAhB,CAAP;AACD;;AACDO,EAAAA,YAAY,CAACP,MAAD,EAAQ;AAClB,UAAMC,GAAG,GAAGT,OAAO,GAAGQ,MAAM,CAACQ,EAAjB,GAAsB,GAAlC;AACA,WAAOjB,KAAK,CAACkB,MAAN,CAAaR,GAAb,CAAP;AACD;;AAnBgC","sourcesContent":["import axios from 'axios'\nconst API_URL = 'http://localhost:8000/api/v1/lib/author/';\n\nexport default class AuthorManager {\n\n  getAuthors(){\n    return axios.get(API_URL).then(response => response.data);\n  }\n  getAuthor(author){\n    const url = API_URL + author + '/';\n    return axios.get(url).then(response => response.data);\n  }\n  createAuthor(author){\n    return axios.post(API_URL,author)\n  }\n  updateAuthor(author){\n    const url = API_URL + author.pk +'/';\n    return axios.patch(url,author)\n  }\n  deleteAuthor(author){\n    const url = API_URL + author.id + '/';\n    return axios.delete(url)\n  }\n}\n"]},"metadata":{},"sourceType":"module"}